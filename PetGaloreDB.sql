CREATE DATABASE PETSTORE

CREATE TABLE CUSTOMER( CUSTOMERID INT IDENTITY(1,1) PRIMARY KEY,
CUSTOMERNAME VARCHAR(30),
CUSTOMERADDRESS VARCHAR(200),
CONTACT VARCHAR(10),
EMAIL VARCHAR(30),
DOB DATE,
CUSTOMERPASSWORD VARCHAR(40));

CREATE PROCEDURE USP_INS_CUSTOMER
@CUSTOMERNAME VARCHAR(30),
@CUSTOMERADDRESS VARCHAR(200),
@CONTACT VARCHAR(10),
@EMAIL VARCHAR(30),
@DOB DATE,
@CUSTOMERPASSWORD VARCHAR(40)
AS BEGIN
INSERT INTO CUSTOMER(CUSTOMERNAME,CUSTOMERADDRESS,CONTACT,EMAIL,DOB,CUSTOMERPASSWORD)VALUES(@CUSTOMERNAME,@CUSTOMERADDRESS,@CONTACT,@EMAIL,@DOB,@CUSTOMERPASSWORD)
END

SELECT *FROM CUSTOMER
CREATE PROCEDURE USP_GET_SUPPLIER_CREDENTIALS
@SUPPLIEREMAIL VARCHAR(70),
@SUPPLIERPASSWORD VARCHAR(70)
AS BEGIN
SELECT SUPPLIERID,SUPPLIERNAME FROM SUPPLIER WHERE SUPPLIEREMAIL=@SUPPLIEREMAIL AND SUPPLIERPASSWORD=@SUPPLIERPASSWORD;
END

CREATE TABLE SUPPLIER(SUPPLIERID INT IDENTITY(1,1) PRIMARY KEY,
SUPPLIERNAME VARCHAR(30),
SUPPLIERADDRESS VARCHAR(200),
SUPPLIERCONTACT VARCHAR(12),
SUPPLIEREMAIL VARCHAR(70),
SUPPLIERPASSWORD VARCHAR(60))

CREATE PROCEDURE USP_INS_SUPPLIER
@SUPPLIERNAME VARCHAR(30),
@SUPPLIERADDRESS VARCHAR(200),
@SUPPLIERCONTACT VARCHAR(12),
@SUPPLIEREMAIL VARCHAR(70),
@SUPPLIERPASSWORD VARCHAR(60)
AS BEGIN
INSERT INTO SUPPLIER(SUPPLIERNAME,SUPPLIERADDRESS,SUPPLIERCONTACT,SUPPLIEREMAIL,SUPPLIERPASSWORD)
VALUES(@SUPPLIERNAME,@SUPPLIERADDRESS,@SUPPLIERCONTACT,@SUPPLIEREMAIL,@SUPPLIERPASSWORD)
END
DELETE FROM CATEGORY WHERE CATEGORYID = 5
SELECT* FROM CATEGORY
DROP TABLE CATEGORY
CREATE TABLE CATEGORY(
CATEGORYID INT IDENTITY PRIMARY KEY, CATEGORYNAME VARCHAR(40), CATEGORYDESCRIPTION VARCHAR(80));

CREATE PROCEDURE USP_INS_CATEGORY
@CATEGORYNAME VARCHAR(40),
@CATEGORYDESCRIPTION VARCHAR(80)
AS BEGIN 
INSERT INTO CATEGORY(CATEGORYNAME,CATEGORYDESCRIPTION) VALUES(@CATEGORYNAME,@CATEGORYDESCRIPTION)
END

CREATE TABLE PRODUCTS(PRODUCTID INT IDENTITY PRIMARY KEY,
PRODUCTNAME VARCHAR(60),
PRODUCTPRICE MONEY,
PRODUCTDESCRIPTION VARCHAR(80),
STOCK INT,
PRODUCTIMAGE VARCHAR(90),
SUPPLIERID INT FOREIGN KEY REFERENCES SUPPLIER(SUPPLIERID),
CATEGORYID INT FOREIGN KEY REFERENCES CATEGORY(CATEGORYID))

ALTER TABLE PRODUCTS
ALTER COLUMN PRODUCTDESCRIPTION VARCHAR(400)

ALTER PROCEDURE [dbo].[USP_INS_PRODUCTS]
@PRODUCTNAME VARCHAR(60),
@PRODUCTPRICE MONEY,
@PRODUCTDESCRIPTION VARCHAR(400),
@STOCK INT,
@PRODUCTIMAGE VARCHAR(90),
@SUPPLIERID INT,
@CATEGORYID INT
AS BEGIN
INSERT INTO PRODUCTS(PRODUCTNAME,PRODUCTPRICE,PRODUCTDESCRIPTION,STOCK,PRODUCTIMAGE,SUPPLIERID,CATEGORYID)VALUES(@PRODUCTNAME,@PRODUCTPRICE,@PRODUCTDESCRIPTION,@STOCK,@PRODUCTIMAGE,@SUPPLIERID,@CATEGORYID)
END

select * from PRODUCTS
DELETE FROM PRODUCTS WHERE PRODUCTID = 2

CREATE PROCEDURE USP_GET_ALLPRODUCTS
AS BEGIN
SELECT PRODUCTID,PRODUCTNAME,PRODUCTPRICE,PRODUCTDESCRIPTION,STOCK,PRODUCTIMAGE,SUPPLIERID,CATEGORYID FROM PRODUCTS
END

CREATE PROCEDURE USP_GET_PRODUCT_BYID
@PRODUCTID INT
AS BEGIN
SELECT P.PRODUCTID,P.PRODUCTNAME,P.PRODUCTPRICE,P.PRODUCTDESCRIPTION,P.STOCK,P.PRODUCTIMAGE,S.SUPPLIERID,P.CATEGORYID,S.SUPPLIERNAME
FROM PRODUCTS P LEFT JOIN SUPPLIER S ON P.SUPPLIERID=S.SUPPLIERID
WHERE PRODUCTID= @PRODUCTID
END


CREATE PROCEDURE USP_GET_LOGIN_CREDENTIALS
@EMAIL VARCHAR(70),
@CUSTOMERPASSWORD VARCHAR(70)
AS BEGIN
SELECT CUSTOMERID,CUSTOMERNAME FROM CUSTOMER WHERE EMAIL=@EMAIL AND CUSTOMERPASSWORD=@CUSTOMERPASSWORD;
END

CREATE TABLE CART(
CARTID INT IDENTITY PRIMARY KEY,
CUSTOMERID INT FOREIGN KEY REFERENCES CUSTOMER(CUSTOMERID),
PRODUCTID INT FOREIGN KEY REFERENCES PRODUCTS(PRODUCTID),
QUANTITY INT)

CREATE PROCEDURE USP_INS_CART
@CUSTOMERID INT,
@PRODUCTID INT,
@QUANTITY INT
AS BEGIN
INSERT INTO CART(CUSTOMERID,PRODUCTID,QUANTITY) VALUES(@CUSTOMERID,@PRODUCTID,@QUANTITY);
END
ALTER PROCEDURE [dbo].[USP_INS_CART]
@CUSTOMERID INT,
@PRODUCTID INT,
@QUANTITY INT 
AS BEGIN
IF EXISTS(SELECT *FROM CART WHERE PRODUCTID=@PRODUCTID AND CUSTOMERID=@CUSTOMERID)
BEGIN 
	UPDATE CART SET QUANTITY = QUANTITY+@QUANTITY WHERE PRODUCTID=@PRODUCTID AND CUSTOMERID=@CUSTOMERID;
	END
ELSE
BEGIN
INSERT INTO CART(CUSTOMERID,PRODUCTID,QUANTITY)VALUES(@CUSTOMERID,@PRODUCTID,@QUANTITY);
END
END

SELECT*FROM CART

ALTER PROCEDURE [dbo]. USP_GET_CART_ITEMS
@CUSTOMERID INT
AS BEGIN
    SELECT P.PRODUCTIMAGE, P.PRODUCTNAME, P.PRODUCTPRICE, C.QUANTITY
    FROM CART C
    INNER JOIN PRODUCTS P ON C.PRODUCTID = P.PRODUCTID
    WHERE C.CUSTOMERID = @CUSTOMERID;
END

ALTER PROCEDURE [dbo].[USP_GET_CART_ITEMS]
@CUSTOMERID INT,
@ORDERAMOUNT INT OUTPUT
AS BEGIN
SELECT C.CARTID,P.PRODUCTIMAGE,P.PRODUCTID, P.PRODUCTNAME, P.PRODUCTPRICE,P.STOCK, C.QUANTITY, P.PRODUCTPRICE*C.QUANTITY AS TOTAL
    FROM CART C
    JOIN PRODUCTS P ON C.PRODUCTID = P.PRODUCTID
    WHERE C.CUSTOMERID = @CUSTOMERID;

	SELECT @ORDERAMOUNT=SUM(P.PRODUCTPRICE*C.QUANTITY) FROM CART C
	JOIN PRODUCTS P ON C.PRODUCTID = P.PRODUCTID
	 WHERE C.CUSTOMERID = @CUSTOMERID;
END

USE PETSTORE

CREATE PROCEDURE USP_GET_CUSTOMER_DETAILS
AS BEGIN
    SELECT CUSTOMERID, CUSTOMERNAME, CUSTOMERADDRESS, CONTACT, EMAIL, DOB
    FROM CUSTOMER
END

CREATE PROCEDURE USP_GET_SUPPLIER_DETAILS
AS BEGIN
SELECT SUPPLIERID,SUPPLIERNAME, SUPPLIERADDRESS,SUPPLIERCONTACT,SUPPLIEREMAIL
FROM SUPPLIER
END

ALTER PROCEDURE [dbo].[USP_GET_ALLPRODUCT_DETAILS]
AS BEGIN
SELECT P.PRODUCTID,P.PRODUCTNAME,P.PRODUCTIMAGE,P.PRODUCTPRICE,P.STOCK,P.SUPPLIERID,P.CATEGORYID, G.CATEGORYNAME
FROM PRODUCTS P
INNER JOIN CATEGORY G ON P.CATEGORYID=G.CATEGORYID
END
SELECT*FROM PRODUCTS
CREATE PROCEDURE USP_GET_CATEGORY_DETAILS
AS BEGIN
SELECT CATEGORYID, CATEGORYNAME , CATEGORYDESCRIPTION FROM CATEGORY
END

CREATE PROCEDURE USP_SEARCH_PRODUCTS
@SEARCH_TERM VARCHAR(50)
AS
BEGIN
    SELECT P.PRODUCTID, P.PRODUCTNAME, P.PRODUCTPRICE, P.PRODUCTDESCRIPTION, P.STOCK, P.PRODUCTIMAGE,
           S.SUPPLIERID, P.CATEGORYID, S.SUPPLIERNAME
    FROM PRODUCTS P
    LEFT JOIN SUPPLIER S ON P.SUPPLIERID = S.SUPPLIERID
    WHERE P.PRODUCTNAME LIKE '%' + @SEARCH_TERM + '%';
END

CREATE PROCEDURE USP_GET_CUSTOMER_SEARCH_DETAILS
@SEARCH VARCHAR(80)
AS BEGIN
    SELECT CUSTOMERID, CUSTOMERNAME, CUSTOMERADDRESS, CONTACT, EMAIL, DOB
    FROM CUSTOMER
	WHERE CUSTOMERNAME LIKE @SEARCH + '%';
END

CREATE TABLE ORDERS(
ORDERID INT IDENTITY PRIMARY KEY,
CUSTOMERID INT FOREIGN KEY REFERENCES CUSTOMER(CUSTOMERID),
ORDERDATE DATE)

ALTER PROCEDURE [dbo].[USP_GET_ORDER_DETAILS]
AS BEGIN
SELECT O.ORDERID, O.CUSTOMERID,O.ORDERDATE,C.CUSTOMERNAME FROM ORDERS O
INNER JOIN CUSTOMER C ON O.CUSTOMERID=C.CUSTOMERID
END


CREATE TABLE ORDER_PRODUCT(
ORDERID INT FOREIGN KEY REFERENCES ORDERS(ORDERID),
PRODUCTID INT FOREIGN KEY REFERENCES PRODUCTS(PRODUCTID),
QUANTITY INT)

ALTER PROCEDURE [dbo].[USP_GET_SUPPLIER_ORDERS]
@SUPPLIERID INT
AS BEGIN
SELECT P.PRODUCTID, D.PRODUCTNAME, C.CUSTOMERNAME FROM ORDER_PRODUCT P
 INNER JOIN PRODUCTS D ON D.PRODUCTID=P.PRODUCTID
 INNER JOIN ORDERS O ON O.ORDERID= P.ORDERID
 INNER JOIN CUSTOMER C ON O.CUSTOMERID=C.CUSTOMERID
 WHERE D.SUPPLIERID = @SUPPLIERID;
END

SELECT * FROM PRODUCTS
SELECT * FROM ORDER_PRODUCT
SELECT * FROM ORDERS


--INSERT DETAILS INTO ORDERS TABLE
ALTER PROCEDURE USP_PLACE_ORDER
@CUSTOMERID INT,
@ORDERID INT OUT
AS BEGIN
BEGIN TRY
BEGIN TRAN

INSERT INTO ORDERS(CUSTOMERID,ORDERDATE)VALUES(@CUSTOMERID,GETDATE());
--GETTING IDENTITY FROM ORDERS TABLE
SET @ORDERID = SCOPE_IDENTITY();
--INSERT DETAILS INTO ORDER_PRODUCT TABLE
INSERT INTO ORDER_PRODUCT(ORDERID,PRODUCTID,QUANTITY)
SELECT @ORDERID,PRODUCTID,QUANTITY
FROM CART
WHERE CUSTOMERID=@CUSTOMERID;

UPDATE  P SET STOCK=P.STOCK-C.QUANTITY FROM PRODUCTS P
JOIN CART C ON C.PRODUCTID =P.PRODUCTID
WHERE CUSTOMERID=@CUSTOMERID;

DELETE FROM CART WHERE CUSTOMERID=@CUSTOMERID;
COMMIT TRAN
END TRY
BEGIN CATCH
SET @ORDERID=0;
ROLLBACK TRANSACTION;
END CATCH
END

USE PETSTORE

SELECT *FROM CATEGORY

CREATE PROCEDURE USP_DELETE_FROM_CART
@CART_ID INT
AS BEGIN
DELETE C FROM CART C WHERE CARTID=@CART_ID
END
DROP TABLE [ADMIN]
CREATE TABLE [ADMIN](ADMINID INT IDENTITY PRIMARY KEY,ADMINNAME VARCHAR(50),ADMINPASSWORD VARCHAR(56));
INSERT INTO ADMIN (ADMINNAME,ADMINPASSWORD)VALUES('Admin','admin123')


CREATE PROCEDURE USP_ADMIN_LOGIN
@ADMINNAME VARCHAR(70),
@ADMINPASSWORD VARCHAR(70)
AS BEGIN
SELECT ADMINID FROM [ADMIN] WHERE ADMINNAME=@ADMINNAME AND ADMINPASSWORD=@ADMINPASSWORD;
END

SELECT *FROM ORDERS
SELECT *FROM PRODUCTS
DELETE FROM PRODUCTS WHERE PRODUCTID = 29

CREATE PROCEDURE USP_UPDATE_QUANTITY
@CARTID INT,
@QUANTITY INT
AS BEGIN
UPDATE CART SET QUANTITY = @QUANTITY WHERE CARTID=@CARTID;
END

CREATE PROC USP_VIEW_ORDER_CUSTOMER
@CUSTOMERID INT
AS BEGIN
SELECT C.CUSTOMERNAME,O.ORDERID,P.PRODUCTNAME,OP.QUANTITY,O.ORDERDATE
FROM ORDERS O 
JOIN ORDERPRODUCT OP ON O.ORDERID = OP.ORDERID 
JOIN PRODUCT P ON P.PRODUCTID = OP.PRODUCTID
JOIN CUSTOMER C ON C.CUSTOMERID = O.CUSTOMERID
WHERE @CUSTOMERID = O.CUSTOMERID
END

SELECT *FROM ORDER_PRODUCT

CREATE PROCEDURE USP_GET_ORDER_HISTORY
@CUSTOMERID INT
AS
BEGIN
    SELECT O.ORDERID, O.ORDERDATE, P.PRODUCTNAME, OP.QUANTITY, P.PRODUCTPRICE
    FROM ORDERS O
    INNER JOIN ORDER_PRODUCT OP ON O.ORDERID = OP.ORDERID
    INNER JOIN PRODUCTS P ON OP.PRODUCTID = P.PRODUCTID
    WHERE O.CUSTOMERID = @CUSTOMERID
    ORDER BY O.ORDERDATE DESC;
END

ALTER PROCEDURE [dbo].[USP_GET_ORDER_SUMMARY]
@ORDERID INT
AS BEGIN
SELECT O.ORDERID, O.ORDERDATE,P.PRODUCTIMAGE, P.PRODUCTPRICE,OP.QUANTITY,P.PRODUCTNAME,P.PRODUCTPRICE*OP.QUANTITY AS TOTALAMOUNT
FROM ORDERS O
JOIN ORDER_PRODUCT OP ON O.ORDERID=OP.ORDERID
JOIN CUSTOMER C ON C.CUSTOMERID=O.CUSTOMERID
JOIN PRODUCTS P ON P.PRODUCTID=OP.PRODUCTID
WHERE O.ORDERID=@ORDERID;
END


SELECT *FROM PRODUCTS

CREATE PROCEDURE USP_COUNT_CART_ITEMS
@CUSTOMERID INT,
@ITEMCOUNT INT OUTPUT
AS BEGIN
    SELECT @ITEMCOUNT = COUNT(*) 
    FROM CART 
    WHERE CUSTOMERID = @CUSTOMERID;
END

CREATE PROCEDURE USP_UPDATE_SUPPLIER_PRODUCT
@PRODUCTID INT,
@PRODUCTNAME VARCHAR(30),
@PRODUCTDESCRIPTION VARCHAR(100),
@PRODUCTPRICE MONEY,
@PRODUCTSTOCK INT,
@PRODUCTIMAGE VARCHAR(50),
@SUPPLIERID INT,
@CATEGORYID INT
AS BEGIN
UPDATE PRODUCTS SET PRODUCTNAME=@PRODUCTNAME,PRODUCTDESCRIPTION=@PRODUCTDESCRIPTION,PRODUCTPRICE=@PRODUCTPRICE,STOCK=@PRODUCTSTOCK,PRODUCTIMAGE=@PRODUCTIMAGE,CATEGORYID=@CATEGORYID WHERE PRODUCTID=@PRODUCTID;
END

ALTER PROCEDURE [dbo].[USP_GET_PRODUCTS_BY_SUPPLIER]
@SUPPLIERID INT
AS
BEGIN
    SELECT P.PRODUCTID, P.PRODUCTNAME, P.PRODUCTPRICE, P.PRODUCTDESCRIPTION, P.STOCK, P.PRODUCTIMAGE,
           S.SUPPLIERID, P.CATEGORYID, S.SUPPLIERNAME
    FROM PRODUCTS P
    INNER JOIN SUPPLIER S ON P.SUPPLIERID = S.SUPPLIERID
    WHERE S.SUPPLIERID = @SUPPLIERID;
END

SELECT * FROM ADMIN